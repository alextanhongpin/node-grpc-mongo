// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/transaction.proto

/*
Package transaction is a generated protocol buffer package.

It is generated from these files:
	proto/transaction.proto

It has these top-level messages:
	TransactionRequest
	TransactionResponse
	TransactionReply
*/
package transaction

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type TransactionResponse_Type int32

const (
	TransactionResponse_INCOME  TransactionResponse_Type = 0
	TransactionResponse_EXPENSE TransactionResponse_Type = 1
)

var TransactionResponse_Type_name = map[int32]string{
	0: "INCOME",
	1: "EXPENSE",
}
var TransactionResponse_Type_value = map[string]int32{
	"INCOME":  0,
	"EXPENSE": 1,
}

func (x TransactionResponse_Type) String() string {
	return proto.EnumName(TransactionResponse_Type_name, int32(x))
}
func (TransactionResponse_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0} }

type TransactionRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *TransactionRequest) Reset()                    { *m = TransactionRequest{} }
func (m *TransactionRequest) String() string            { return proto.CompactTextString(m) }
func (*TransactionRequest) ProtoMessage()               {}
func (*TransactionRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *TransactionRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type TransactionResponse struct {
	Id        string                   `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	CreatedAt int64                    `protobuf:"varint,2,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	UpdatedAt int64                    `protobuf:"varint,3,opt,name=updated_at,json=updatedAt" json:"updated_at,omitempty"`
	Name      string                   `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
	Amount    float32                  `protobuf:"fixed32,5,opt,name=amount" json:"amount,omitempty"`
	Type      TransactionResponse_Type `protobuf:"varint,6,opt,name=type,enum=transaction.TransactionResponse_Type" json:"type,omitempty"`
}

func (m *TransactionResponse) Reset()                    { *m = TransactionResponse{} }
func (m *TransactionResponse) String() string            { return proto.CompactTextString(m) }
func (*TransactionResponse) ProtoMessage()               {}
func (*TransactionResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *TransactionResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *TransactionResponse) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *TransactionResponse) GetUpdatedAt() int64 {
	if m != nil {
		return m.UpdatedAt
	}
	return 0
}

func (m *TransactionResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TransactionResponse) GetAmount() float32 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *TransactionResponse) GetType() TransactionResponse_Type {
	if m != nil {
		return m.Type
	}
	return TransactionResponse_INCOME
}

type TransactionReply struct {
	XId   string  `protobuf:"bytes,1,opt,name=_id,json=Id" json:"_id,omitempty"`
	Name  string  `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Price float32 `protobuf:"fixed32,3,opt,name=price" json:"price,omitempty"`
}

func (m *TransactionReply) Reset()                    { *m = TransactionReply{} }
func (m *TransactionReply) String() string            { return proto.CompactTextString(m) }
func (*TransactionReply) ProtoMessage()               {}
func (*TransactionReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *TransactionReply) GetXId() string {
	if m != nil {
		return m.XId
	}
	return ""
}

func (m *TransactionReply) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TransactionReply) GetPrice() float32 {
	if m != nil {
		return m.Price
	}
	return 0
}

func init() {
	proto.RegisterType((*TransactionRequest)(nil), "transaction.TransactionRequest")
	proto.RegisterType((*TransactionResponse)(nil), "transaction.TransactionResponse")
	proto.RegisterType((*TransactionReply)(nil), "transaction.TransactionReply")
	proto.RegisterEnum("transaction.TransactionResponse_Type", TransactionResponse_Type_name, TransactionResponse_Type_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Transaction service

type TransactionClient interface {
	GetTransaction(ctx context.Context, in *TransactionRequest, opts ...grpc.CallOption) (*TransactionReply, error)
}

type transactionClient struct {
	cc *grpc.ClientConn
}

func NewTransactionClient(cc *grpc.ClientConn) TransactionClient {
	return &transactionClient{cc}
}

func (c *transactionClient) GetTransaction(ctx context.Context, in *TransactionRequest, opts ...grpc.CallOption) (*TransactionReply, error) {
	out := new(TransactionReply)
	err := grpc.Invoke(ctx, "/transaction.Transaction/GetTransaction", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Transaction service

type TransactionServer interface {
	GetTransaction(context.Context, *TransactionRequest) (*TransactionReply, error)
}

func RegisterTransactionServer(s *grpc.Server, srv TransactionServer) {
	s.RegisterService(&_Transaction_serviceDesc, srv)
}

func _Transaction_GetTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransactionServer).GetTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transaction.Transaction/GetTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransactionServer).GetTransaction(ctx, req.(*TransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Transaction_serviceDesc = grpc.ServiceDesc{
	ServiceName: "transaction.Transaction",
	HandlerType: (*TransactionServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetTransaction",
			Handler:    _Transaction_GetTransaction_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/transaction.proto",
}

func init() { proto.RegisterFile("proto/transaction.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 333 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x92, 0xc1, 0x4a, 0xfb, 0x40,
	0x10, 0xc6, 0xff, 0xbb, 0x4d, 0xf3, 0xa7, 0x53, 0xa8, 0x61, 0x14, 0x0d, 0xc5, 0xd2, 0x10, 0x14,
	0x72, 0x6a, 0xb0, 0x9e, 0x3c, 0x16, 0x09, 0xd2, 0x43, 0xab, 0xc4, 0x1e, 0xbc, 0x95, 0xb5, 0x59,
	0x4a, 0xa4, 0xdd, 0x5d, 0x93, 0xad, 0x90, 0xab, 0xaf, 0xe0, 0xa3, 0xf9, 0x0a, 0xde, 0x7c, 0x09,
	0xe9, 0x36, 0xda, 0x54, 0xec, 0x6d, 0xe7, 0x37, 0xdf, 0x7e, 0x7c, 0xb3, 0xb3, 0x70, 0xa2, 0x32,
	0xa9, 0x65, 0xa8, 0x33, 0x26, 0x72, 0x36, 0xd3, 0xa9, 0x14, 0x3d, 0x43, 0xb0, 0x59, 0x41, 0xed,
	0xd3, 0xb9, 0x94, 0xf3, 0x05, 0x0f, 0x99, 0x4a, 0x43, 0x26, 0x84, 0xd4, 0x6c, 0x8d, 0xf3, 0x8d,
	0xd4, 0x3f, 0x03, 0x9c, 0x6c, 0xc5, 0x31, 0x7f, 0x5e, 0xf1, 0x5c, 0x63, 0x0b, 0x68, 0x9a, 0xb8,
	0xc4, 0x23, 0x41, 0x23, 0xa6, 0x69, 0xe2, 0x7f, 0x12, 0x38, 0xdc, 0x91, 0xe5, 0x4a, 0x8a, 0x9c,
	0xff, 0xd6, 0x61, 0x07, 0x60, 0x96, 0x71, 0xa6, 0x79, 0x32, 0x65, 0xda, 0xa5, 0x1e, 0x09, 0x6a,
	0x71, 0xa3, 0x24, 0x03, 0xbd, 0x6e, 0xaf, 0x54, 0xf2, 0xdd, 0xae, 0x6d, 0xda, 0x25, 0x19, 0x68,
	0x44, 0xb0, 0x04, 0x5b, 0x72, 0xd7, 0x32, 0x7e, 0xe6, 0x8c, 0xc7, 0x60, 0xb3, 0xa5, 0x5c, 0x09,
	0xed, 0xd6, 0x3d, 0x12, 0xd0, 0xb8, 0xac, 0xf0, 0x0a, 0x2c, 0x5d, 0x28, 0xee, 0xda, 0x1e, 0x09,
	0x5a, 0xfd, 0xf3, 0x5e, 0xf5, 0x11, 0xfe, 0x48, 0xda, 0x9b, 0x14, 0x8a, 0xc7, 0xe6, 0x8a, 0xdf,
	0x05, 0x6b, 0x5d, 0x21, 0x80, 0x3d, 0x1c, 0x5f, 0xdf, 0x8e, 0x22, 0xe7, 0x1f, 0x36, 0xe1, 0x7f,
	0xf4, 0x70, 0x17, 0x8d, 0xef, 0x23, 0x87, 0xf8, 0x23, 0x70, 0x76, 0x2c, 0xd4, 0xa2, 0xc0, 0x03,
	0xa8, 0x4d, 0xb7, 0xa3, 0x0e, 0x93, 0x9f, 0xb0, 0xb4, 0x12, 0xf6, 0x08, 0xea, 0x2a, 0x4b, 0x67,
	0xdc, 0x8c, 0x46, 0xe3, 0x4d, 0xd1, 0x2f, 0xa0, 0x59, 0xb1, 0xc3, 0x27, 0x68, 0xdd, 0x70, 0x5d,
	0x25, 0xdd, 0xfd, 0xe9, 0xcd, 0x3a, 0xda, 0x9d, 0xfd, 0x02, 0xb5, 0x28, 0x7c, 0xf7, 0xf5, 0xfd,
	0xe3, 0x8d, 0x22, 0x3a, 0xe1, 0xcb, 0x45, 0xf5, 0x37, 0xe4, 0x8f, 0xb6, 0x59, 0xf2, 0xe5, 0x57,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x62, 0xe0, 0xc3, 0x32, 0x2a, 0x02, 0x00, 0x00,
}
